---
import Text from "@comp/Text.astro";
import { cn } from "@utils/tailwind";
import type { NonNullableProps } from "@utils/types";
import type { HTMLAttributes } from "astro/types";
import { cva } from "class-variance-authority";

const selectVariants = cva(
	[
		"absolute",
		"grid",
		"rounded-sm",
		"z-20",
		"bg-primary-050",
		"border-primary-900",
		"border",
		"rounded-lg",
		"bg-background-default",
	],
	{
		variants: {
			variant: {
				single: ["w-48", "grid-cols-1"],
				double: ["w-96", "grid-cols-2"],
			},
			flow: {
				right: [],
				left: ["right-0"],
			},
		},
	},
);

interface Props
	extends HTMLAttributes<"div">,
		NonNullableProps<typeof selectVariants, "flow" | "variant"> {
	name: string;
	imgSrc?: string | undefined;
}

const {
	name,
	imgSrc,
	flow,
	variant,
	class: className,
	...restProps
} = Astro.props;
---

<div {...restProps} class={cn('relative', className)}>
  <div @click={`name = name == "${name}" ? "" : "${name}"`}>
    {
      imgSrc ? (
        <img
          src={imgSrc}
          class="cursor-pointer p-1 w-14"
        />
      ) : (
        <button class="group cursor-pointer py-3 px-5">
          <Text variant="paragraph" class="flex items-center justify-between gap-3 group-hover:text-text-400">
            {name}
            
            <svg
              class="w-2"
              aria-hidden="true"
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 10 6"
            >
              <path
                stroke="currentColor"
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="m1 1 4 4 4-4"
              />
            </svg>
          </Text>
        </button>
      )
    }
  </div>
  <div
    class={selectVariants({ flow, variant })}
    x-show={`name == "${name}"`}
    x-cloak
  >
    <slot />
  </div>
</div>
