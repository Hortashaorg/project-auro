---
import type { NonNullableProps } from "@utils/types";
import type { HTMLAttributes } from "astro/types";
import { cva } from "class-variance-authority";

const selectVariants = cva(
	["absolute", "grid", "rounded-sm", "z-20", "bg-primary-050"],
	{
		variants: {
			variant: {
				single: ["w-48", "grid-cols-1"],
				double: ["w-96", "grid-cols-2"],
			},
			flow: {
				right: [],
				left: ["right-0"],
			},
		},
	},
);

interface Props
	extends HTMLAttributes<"div">,
		NonNullableProps<typeof selectVariants, "flow" | "variant"> {
	name: string;
	imgSrc?: string | undefined;
}

const { name, imgSrc, class: classList, flow, variant } = Astro.props;
---

<div class={`relative ${classList}`} {...Astro.props}>
  <div @click={`name = name == "${name}" ? "" : "${name}"`}>
    {
      imgSrc ? (
        <img
          src={imgSrc}
          class="cursor-pointer rounded-full bg-white p-1 w-[3.5rem] border"
        />
      ) : (
        <button class="flex items-center justify-between gap-3 hover:bg-primary-200 cursor-pointer py-3 px-5">
          {name}
          <svg
            class="w-2"
            aria-hidden="true"
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 10 6"
          >
            <path
              stroke="currentColor"
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="m1 1 4 4 4-4"
            />
          </svg>
        </button>
      )
    }
  </div>
  <div
    class={`${selectVariants({ flow, variant })}`}
    x-show={`name == "${name}"`}
    x-cloak
  >
    <slot />
  </div>
</div>
