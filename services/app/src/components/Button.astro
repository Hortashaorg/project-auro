---
import { cn } from "@utils/tailwind";
import type { NonNullableProps } from "@utils/types";
import type { HTMLAttributes } from "astro/types";
import { cva } from "class-variance-authority";

const buttonVariants = cva(
	[
		"rounded",
		"disabled:cursor-not-allowed",
		"disabled:opacity-50",
		"transition-transform",
		"disabled:hover:transform-none",
	],
	{
		variants: {
			variant: {
				primary: [
					"border-2",
					"dark:border-primary-dark",
					"border-primary-light",
					"dark:text-text-900",
					"text-text-light",
					"dark:bg-primary-dark",
					"bg-primary-light",
					"hover:shadow-md",
					"dark:hover:shadow-accent-dark",
					"hover:shadow-accent-light",
					"disabled:hover:shadow-none",
					"hover:transform",
					"hover:translate-y-[-2px]",
					"font-bold",
				],
				secondary: [
					"border-2",
					"dark:border-secondary-900",
					"border-secondary-light",
					"dark:text-text-dark",
					"text-text-light",
					"dark:bg-secondary-900",
					"bg-secondary-light",
					"hover:transform",
					"hover:translate-y-[-2px]",
					"font-normal",
				],
				outline: [
					"border-2",
					"dark:border-primary-dark",
					"dark:text-text-dark",
					"border-primary-light",
					"text-text-light",
					"font-normal",
				],
			},
			size: {
				small: ["text-sm", "px-3.5", "py-1.5"],
				medium: ["text-base", "px-5", "py-2.5"],
				large: ["text-lg", "px-7", "py-3"],
			},
		},
		defaultVariants: {
			size: "medium",
		},
	},
);

type ButtonVariants = NonNullableProps<typeof buttonVariants, "variant">;

interface Props extends HTMLAttributes<"button">, ButtonVariants {}

const {
	variant,
	size,
	class: className,
	type = "button",
	...restProps
} = Astro.props;
---
<button {...restProps} type={type} class={cn(buttonVariants({ variant, size }), className)}>
    <slot />
</button>