---
import { cn } from "@utils/tailwind";
import type { NonNullableProps } from "@utils/types";
import type { HTMLAttributes } from "astro/types";
import { cva } from "class-variance-authority";

const textVariants = cva([], {
	variants: {
		variant: {
			header: [
				"text-5xl",
				"font-bold",
				"dark:text-text-dark",
				"text-text-light",
				"font-heading",
				"leading-tight",
				"tracking-normal",
			],
			paragraph: [
				"text-base",
				"font-normal",
				"dark:text-text-200",
				"text-text-700",
				"font-body",
				"leading-loose",
			],
		},
		alignment: {
			left: ["text-left"],
			center: ["text-center"],
		},
	},
	defaultVariants: {
		alignment: "left",
	},
});

type TextVariants = NonNullableProps<typeof textVariants, "variant">;

interface Props extends HTMLAttributes<"div">, TextVariants {}

const {
	variant,
	alignment = "left",
	class: className,
	...restProps
} = Astro.props;

const Tag = variant === "header" ? "h1" : "p";
---

<Tag
  {...restProps}
  class={cn(textVariants({ variant, alignment }), className)}
>
  <slot />
</Tag>
